[
    {
        "title": "Loop Through a List",
        "text": [
            "You can loop through the list items by using a for \nloop:",
            "Example\nPrint all items in the list, one by one:\n\nthislist = [\"apple\", \"banana\", \"cherry\"]\n  for x in thislist:  print(x)\nTry it Yourself »",
            "Learn more about for loops in our Python For Loops Chapter."
        ],
        "examples": [
            {
                "heading": "Example",
                "code": "thislist = [\"apple\", \"banana\", \"cherry\"]\n  for x in thislist:  print(x)"
            }
        ],
        "tables": []
    },
    {
        "title": "Loop Through the Index Numbers",
        "text": [
            "You can also loop through the list items by referring to their index number.",
            "Use the range() and\nlen() functions to create a suitable iterable.",
            "Example\nPrint all items by referring to their index number:\n\nthislist = [\"apple\", \"banana\", \"cherry\"]for i \n  in range(len(thislist)):\n \nprint(thislist[i])\nTry it Yourself »",
            "The iterable created in the example above is [0, 1, 2].",
            ""
        ],
        "examples": [
            {
                "heading": "Example",
                "code": "thislist = [\"apple\", \"banana\", \"cherry\"]for i \n  in range(len(thislist)):\n \nprint(thislist[i])"
            }
        ],
        "tables": []
    },
    {
        "title": "Using a While Loop",
        "text": [
            "You can loop through the list items by using a while loop.",
            "Use the len() function to determine the length of the list,\nthen start at 0 and loop your way through the list items by referring to their indexes.",
            "Remember to increase the index by 1 after each iteration.",
            "Example\nPrint all items, using a while loop to go \n  through all the index numbers\n\nthislist = [\"apple\", \"banana\", \"cherry\"]i = 0\n  while i < len(thislist):\n \nprint(thislist[i])  i = i + 1\nTry it Yourself »",
            "Learn more about while loops in our \nPython While Loops Chapter."
        ],
        "examples": [
            {
                "heading": "Example",
                "code": "thislist = [\"apple\", \"banana\", \"cherry\"]i = 0\n  while i < len(thislist):\n \nprint(thislist[i])  i = i + 1"
            }
        ],
        "tables": []
    },
    {
        "title": "Looping Using List Comprehension",
        "text": [
            "List Comprehension offers the shortest syntax for looping through lists:",
            "Example\nA short hand for loop that will print all items in a list:\n\nthislist = [\"apple\", \"banana\", \"cherry\"][print(x) for x in thislist]\nTry it Yourself »",
            "Learn more about list comprehension in the next chapter:\nList Comprehension.",
            "",
            "❮ Previous\nNext ❯"
        ],
        "examples": [
            {
                "heading": "Example",
                "code": "thislist = [\"apple\", \"banana\", \"cherry\"][print(x) for x in thislist]"
            }
        ],
        "tables": []
    }
]