[
    {
        "title": "Dictionary",
        "text": [
            "Dictionaries are used to store data values in key:value pairs.",
            "A dictionary is a collection which is ordered*, changeable and do not \nallow duplicates.",
            "As of Python version 3.7, dictionaries are ordered. \n  In Python 3.6 and earlier, dictionaries are unordered.",
            "Dictionaries are written with curly brackets, and have keys and values:",
            "Example\nCreate and print a dictionary:\n\nthisdict =\t{\n  \"brand\": \"Ford\",\n  \"model\": \"Mustang\",\n  \"year\": 1964\n}\nprint(thisdict)\n\nTry it Yourself »"
        ],
        "examples": [
            {
                "heading": "Example",
                "code": "thisdict =\t{\n  \"brand\": \"Ford\",\n  \"model\": \"Mustang\",\n  \"year\": 1964\n}\nprint(thisdict)"
            }
        ],
        "tables": []
    },
    {
        "title": "Dictionary Items",
        "text": [
            "Dictionary items are ordered, changeable, and do not allow duplicates.",
            "Dictionary items are presented in key:value pairs, and can be referred to by \nusing the key name.",
            "Example\nPrint the \"brand\" value of the dictionary:\n\nthisdict =\t{\n  \"brand\": \"Ford\",\n  \"model\": \"Mustang\",\n  \"year\": 1964\n}\nprint(thisdict[\"brand\"])\n\nTry it Yourself »"
        ],
        "examples": [
            {
                "heading": "Example",
                "code": "thisdict =\t{\n  \"brand\": \"Ford\",\n  \"model\": \"Mustang\",\n  \"year\": 1964\n}\nprint(thisdict[\"brand\"])"
            }
        ],
        "tables": []
    },
    {
        "title": "Ordered or Unordered?",
        "text": [
            "As of Python version 3.7, dictionaries are ordered. \n  In Python 3.6 and earlier, dictionaries are unordered.",
            "When we say that dictionaries are ordered, it means that the items have a defined order, and that order will not change.",
            "Unordered means that the items do not \nhave a defined order, you cannot refer to an item by using an index."
        ],
        "examples": [],
        "tables": []
    },
    {
        "title": "Changeable",
        "text": [
            "Dictionaries are changeable, meaning that we can change, add or remove items after the \ndictionary has been created."
        ],
        "examples": [],
        "tables": []
    },
    {
        "title": "Duplicates Not Allowed",
        "text": [
            "Dictionaries cannot have two items with the same key:",
            "Example\nDuplicate values will overwrite existing values:\n\nthisdict =\t{\n  \"brand\": \"Ford\",\n  \"model\": \"Mustang\",\n  \"year\": 1964,  \"year\": 2020\n}\nprint(thisdict)\nTry it Yourself »",
            ""
        ],
        "examples": [
            {
                "heading": "Example",
                "code": "thisdict =\t{\n  \"brand\": \"Ford\",\n  \"model\": \"Mustang\",\n  \"year\": 1964,  \"year\": 2020\n}\nprint(thisdict)"
            }
        ],
        "tables": []
    },
    {
        "title": "Dictionary Length",
        "text": [
            "To determine how many items a dictionary has, use the \nlen() function:",
            "Example\nPrint the number of items in the dictionary:\n\nprint(len(thisdict))\n\nTry it Yourself »"
        ],
        "examples": [
            {
                "heading": "Example",
                "code": "print(len(thisdict))"
            }
        ],
        "tables": []
    },
    {
        "title": "Dictionary Items - Data Types",
        "text": [
            "The values in dictionary items can be of any data type:",
            "Example\nString, int, boolean, and list data types:\n\nthisdict =\t{\n  \"brand\": \"Ford\",\n  \"electric\": False,\n  \"year\": 1964,  \"colors\": [\"red\", \"white\", \"blue\"]\n} \nTry it Yourself »"
        ],
        "examples": [
            {
                "heading": "Example",
                "code": "thisdict =\t{\n  \"brand\": \"Ford\",\n  \"electric\": False,\n  \"year\": 1964,  \"colors\": [\"red\", \"white\", \"blue\"]\n}"
            }
        ],
        "tables": []
    },
    {
        "title": "type()",
        "text": [
            "From Python's perspective, dictionaries are defined as objects with the data type 'dict':",
            "<class 'dict'>",
            "Example\nPrint the data type of a dictionary:\n\nthisdict =\t{\n  \"brand\": \"Ford\",\n  \"model\": \"Mustang\",\n  \"year\": 1964\n}\nprint(type(thisdict))\nTry it Yourself »"
        ],
        "examples": [
            {
                "heading": "Example",
                "code": "thisdict =\t{\n  \"brand\": \"Ford\",\n  \"model\": \"Mustang\",\n  \"year\": 1964\n}\nprint(type(thisdict))"
            }
        ],
        "tables": []
    },
    {
        "title": "The dict() Constructor",
        "text": [
            "It is also possible to use the dict() constructor to make a dictionary.",
            "Example\nUsing the dict() method to make a dictionary:\n\nthisdict = \n  dict(name = \"John\", age = 36, country = \"Norway\")\nprint(thisdict)\n\nTry it Yourself »"
        ],
        "examples": [
            {
                "heading": "Example",
                "code": "thisdict = \n  dict(name = \"John\", age = 36, country = \"Norway\")\nprint(thisdict)"
            }
        ],
        "tables": []
    },
    {
        "title": "Python Collections (Arrays)",
        "text": [
            "There are four collection data types in the Python programming language:",
            "*Set items are unchangeable, but you can remove and/or add items \n  whenever you like.\n**As of Python version 3.7, dictionaries are ordered. \n  In Python 3.6 and earlier, dictionaries are unordered.",
            "When choosing a collection type, it is useful to understand the properties of that type. Choosing the right type for a particular data set could mean retention of meaning, and, it could mean an increase in efficiency or security.",
            "",
            "❮ Previous\nNext ❯"
        ],
        "examples": [],
        "tables": []
    }
]