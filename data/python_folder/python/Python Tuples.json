[
    {
        "title": "Tuple",
        "text": [
            "Tuples are used to store multiple items in a single variable.",
            "Tuple is one of 4 built-in data types in Python used to store collections of \ndata, the other 3 are List, \nSet, and Dictionary, all with different qualities and usage.",
            "A tuple is a collection which is ordered and unchangeable.",
            "Tuples are written with round brackets.",
            "Example\nCreate a Tuple:\n\nthistuple = (\"apple\", \"banana\", \"cherry\")\nprint(thistuple)\n\nTry it Yourself »"
        ],
        "examples": [
            {
                "heading": "Example",
                "code": "thistuple = (\"apple\", \"banana\", \"cherry\")\nprint(thistuple)"
            }
        ],
        "tables": []
    },
    {
        "title": "Tuple Items",
        "text": [
            "Tuple items are ordered, unchangeable, and allow duplicate values.",
            "Tuple items are indexed, the first item has index [0], the second item has index [1] etc."
        ],
        "examples": [],
        "tables": []
    },
    {
        "title": "Ordered",
        "text": [
            "When we say that tuples are ordered, it means that the items have a defined order, and that order will not change."
        ],
        "examples": [],
        "tables": []
    },
    {
        "title": "Unchangeable",
        "text": [
            "Tuples are unchangeable, meaning that we cannot change, add or remove items after the tuple has been created."
        ],
        "examples": [],
        "tables": []
    },
    {
        "title": "Allow Duplicates",
        "text": [
            "Since tuples are indexed, they can have items with the same value:",
            "Example\nTuples allow duplicate values:\n\nthistuple = (\"apple\", \"banana\", \"cherry\", \"apple\", \"cherry\")\nprint(thistuple)\n\nTry it Yourself »",
            ""
        ],
        "examples": [
            {
                "heading": "Example",
                "code": "thistuple = (\"apple\", \"banana\", \"cherry\", \"apple\", \"cherry\")\nprint(thistuple)"
            }
        ],
        "tables": []
    },
    {
        "title": "Tuple Length",
        "text": [
            "To determine how many items a tuple has, use the \nlen() function:",
            "Example\nPrint the number of items in the tuple:\n\nthistuple = (\"apple\", \"banana\", \"cherry\")\nprint(len(thistuple))\n\nTry it Yourself »"
        ],
        "examples": [
            {
                "heading": "Example",
                "code": "thistuple = (\"apple\", \"banana\", \"cherry\")\nprint(len(thistuple))"
            }
        ],
        "tables": []
    },
    {
        "title": "Create Tuple With One Item",
        "text": [
            "To create a tuple with only one item, you have to add a comma after the item, \notherwise Python will not recognize it as a tuple.",
            "Example\nOne item tuple, remember the comma:\n\nthistuple = (\"apple\",)\n  print(type(thistuple))#NOT a tuplethistuple = (\"apple\")\n  print(type(thistuple))\nTry it Yourself »"
        ],
        "examples": [
            {
                "heading": "Example",
                "code": "thistuple = (\"apple\",)\n  print(type(thistuple))#NOT a tuplethistuple = (\"apple\")\n  print(type(thistuple))"
            }
        ],
        "tables": []
    },
    {
        "title": "Tuple Items - Data Types",
        "text": [
            "Tuple items can be of any data type:",
            "Example\nString, int and boolean data types:\n\ntuple1 = (\"apple\", \"banana\", \"cherry\")\ntuple2 = (1, 5, 7, 9, 3)\ntuple3 = (True, False, False)\n\nTry it Yourself »",
            "A tuple can contain different data types:",
            "Example\nA tuple with strings, integers and boolean values:\n\ntuple1 = (\"abc\", 34, True, 40, \"male\")\n\nTry it Yourself »"
        ],
        "examples": [
            {
                "heading": "Example",
                "code": "tuple1 = (\"apple\", \"banana\", \"cherry\")\ntuple2 = (1, 5, 7, 9, 3)\ntuple3 = (True, False, False)"
            },
            {
                "heading": "Example",
                "code": "tuple1 = (\"abc\", 34, True, 40, \"male\")"
            }
        ],
        "tables": []
    },
    {
        "title": "type()",
        "text": [
            "From Python's perspective, tuples are defined as objects with the data type 'tuple':",
            "<class 'tuple'>",
            "Example\nWhat is the data type of a tuple?\n\nmytuple = (\"apple\", \"banana\", \"cherry\")\nprint(type(mytuple))\n\nTry it Yourself »"
        ],
        "examples": [
            {
                "heading": "Example",
                "code": "mytuple = (\"apple\", \"banana\", \"cherry\")\nprint(type(mytuple))"
            }
        ],
        "tables": []
    },
    {
        "title": "The tuple() Constructor",
        "text": [
            "It is also possible to use the tuple() constructor to make a tuple.",
            "Example\nUsing the tuple() method to make a tuple:\n\nthistuple = tuple((\"apple\", \"banana\", \"cherry\")) # note the double round-brackets\nprint(thistuple)\n\nTry it Yourself »"
        ],
        "examples": [
            {
                "heading": "Example",
                "code": "thistuple = tuple((\"apple\", \"banana\", \"cherry\")) # note the double round-brackets\nprint(thistuple)"
            }
        ],
        "tables": []
    },
    {
        "title": "Python Collections (Arrays)",
        "text": [
            "There are four collection data types in the Python programming language:",
            "*Set items are unchangeable, but you can remove and/or add items \n  whenever you like.\n**As of Python version 3.7, dictionaries are ordered. \n  In Python 3.6 and earlier, dictionaries are unordered.",
            "When choosing a collection type, it is useful to understand the properties of that type. Choosing the right type for a particular data set could mean retention of meaning, and, it could mean an increase in efficiency or security.",
            "",
            "❮ Previous\nNext ❯"
        ],
        "examples": [],
        "tables": []
    }
]