[
    {
        "title": "SQL NOT NULL Constraint",
        "text": [
            "By default, a column can hold NULL values.",
            "The NOT NULL constraint enforces a column to NOT accept NULL values.",
            "This enforces a field to always contain a value, which means that you cannot insert a new record, or update a record without adding a value to this field."
        ],
        "examples": [],
        "tables": []
    },
    {
        "title": "SQL NOT NULL on CREATE TABLE",
        "text": [
            "The following SQL ensures that the \"ID\", \"LastName\", and \n\"FirstName\" columns \nwill NOT accept NULL values when the \"Persons\" table is created:",
            "Example\n\n  CREATE TABLE Persons (    ID int NOT NULL,    \n  LastName varchar(255) NOT NULL,    FirstName varchar(255) \n  NOT NULL,    Age int);"
        ],
        "examples": [
            {
                "heading": "Example",
                "code": "CREATE TABLE Persons (    ID int NOT NULL,    \n  LastName varchar(255) NOT NULL,    FirstName varchar(255) \n  NOT NULL,    Age int);"
            }
        ],
        "tables": []
    },
    {
        "title": "SQL NOT NULL on ALTER TABLE",
        "text": [
            "To create a NOT NULL constraint on the \"Age\" column when the \"Persons\" table is already created, use the following SQL:",
            "SQL Server / MS Access:",
            "ALTER TABLE Persons\nALTER COLUMN Age int NOT NULL;",
            "My SQL / Oracle (prior version 10G):",
            "ALTER TABLE Persons\nMODIFY COLUMN Age int NOT NULL;",
            "Oracle 10G and later:",
            "ALTER TABLE Persons\n  MODIFY Age int NOT NULL;",
            "",
            "❮ Previous\nNext ❯"
        ],
        "examples": [],
        "tables": []
    }
]