[
    {
        "title": "Constants",
        "text": [
            "When you do not want others (or yourself) to change existing variable values, use the const keyword (this will declare the \nvariable as \"constant\", which means unchangeable and read-only):",
            "Example\n\nconst int myNum = 15;  // myNum will always be 15myNum = 10;  // error: \n  assignment of read-only variable 'myNum'\nTry it Yourself »",
            "You should always declare the variable as constant when you have values that are unlikely to change:",
            "Example\n\nconst int minutesPerHour = 60;\nTry it Yourself »"
        ],
        "examples": [
            {
                "heading": "Example",
                "code": "const int myNum = 15;  // myNum will always be 15myNum = 10;  // error: \n  assignment of read-only variable 'myNum'"
            },
            {
                "heading": "Example",
                "code": "const int minutesPerHour = 60;"
            }
        ],
        "tables": []
    },
    {
        "title": "Notes On Constants",
        "text": [
            "When you declare a constant variable, it must be assigned with a value:",
            "Example\nLike this:\n\n  const int minutesPerHour = 60;\n\nThis however, will not work:\n\n  const int minutesPerHour;minutesPerHour = 60; // error\nTry it Yourself »",
            "",
            "❮ Previous\nNext ❯"
        ],
        "examples": [
            {
                "heading": "Example",
                "code": "const int minutesPerHour = 60;"
            }
        ],
        "tables": []
    }
]