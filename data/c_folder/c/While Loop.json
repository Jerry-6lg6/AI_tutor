[
    {
        "title": "Loops",
        "text": [
            "Loops can execute a block of code as long as a specified condition is reached.",
            "Loops are handy because they save time, reduce errors, and they make code more readable."
        ],
        "examples": [],
        "tables": []
    },
    {
        "title": "While Loop",
        "text": [
            "The while loop loops through a block of code as long as a specified condition is true:",
            "Syntax\n\n  while (condition) {\n  // code block to be executed\n }",
            "In the example below, the code in the loop will run, over and over again, as long as \na variable (i) is less than 5:",
            "Example\n\n  int i = 0;while (i < 5) {\n    printf(\"%d\\n\", i);\n  i++;}\n\nTry it Yourself »",
            "Note: Do not forget to increase the variable used in the condition \n(i++), otherwise \nthe loop will never end!",
            "",
            "❮ Previous\nNext ❯"
        ],
        "examples": [
            {
                "heading": "Syntax",
                "code": "while (condition) {\n  // code block to be executed\n }"
            },
            {
                "heading": "Example",
                "code": "int i = 0;while (i < 5) {\n    printf(\"%d\\n\", i);\n  i++;}"
            }
        ],
        "tables": []
    }
]