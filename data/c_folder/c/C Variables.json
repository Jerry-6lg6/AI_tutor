[
    {
        "title": "Declaring (Creating) Variables",
        "text": [
            "To create a variable, specify the type and assign it a \nvalue:",
            "Syntax\n\ntype variableName = value;",
            "Where type is one of C types (such as int), and \nvariableName is the name of the variable (such as x or\nmyName). The equal sign is used to assign a value to the variable.",
            "So, to create a variable that should store a number, look at the following example:",
            "Example\nCreate a variable called myNum of type int and assign the value 15 \nto it:\n\n  int myNum = 15;",
            "You can also declare a variable without assigning the value, and assign the value later:",
            "Example\n\n  // Declare a variableint myNum;// Assign a value to the variablemyNum = 15;"
        ],
        "examples": [
            {
                "heading": "Syntax",
                "code": "type variableName = value;"
            },
            {
                "heading": "Example",
                "code": "int myNum = 15;"
            },
            {
                "heading": "Example",
                "code": "// Declare a variableint myNum;// Assign a value to the variablemyNum = 15;"
            }
        ],
        "tables": []
    },
    {
        "title": "Output Variables",
        "text": [
            "You learned from the output chapter that you can output values/print text with the printf() function:",
            "Example\n\n  printf(\"Hello World!\");\nTry it Yourself »",
            "In many other programming languages (like Python, Java, and C++), you would normally use a \nprint function to display the value of a variable. However, this is not possible in C:",
            "Example\n\n  int myNum = 15;printf(myNum);  // Nothing happens\nTry it Yourself »",
            "To output variables in C, you must get familiar with something called \"format specifiers\", which you will learn about in the next chapter.",
            "",
            "❮ Previous\nNext ❯"
        ],
        "examples": [
            {
                "heading": "Example",
                "code": "printf(\"Hello World!\");"
            },
            {
                "heading": "Example",
                "code": "int myNum = 15;printf(myNum);  // Nothing happens"
            }
        ],
        "tables": []
    }
]