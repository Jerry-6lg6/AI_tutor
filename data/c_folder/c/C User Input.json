[
    {
        "title": "User Input",
        "text": [
            "You have already learned that printf() is used to output values in C.",
            "To get user input, you can use the scanf() function:",
            "Example\nOutput a number entered by the user:\n\n  // Create an integer variable that will store the number we get from the userint myNum;// Ask the user to type a numberprintf(\"Type a number: \n  \\n\");// Get and save the number the user typesscanf(\"%d\", &myNum);\n// Output the number the user typedprintf(\"Your number is: %d\", myNum);\n\nRun example »",
            "The scanf() function takes two arguments: the format specifier of the variable (%d in the example above) and the \nreference operator (&myNum), which stores the memory address of the variable.\nTip: You will learn more about memory addresses and functions in the next chapter."
        ],
        "examples": [
            {
                "heading": "Example",
                "code": "// Create an integer variable that will store the number we get from the userint myNum;// Ask the user to type a numberprintf(\"Type a number: \n  \\n\");// Get and save the number the user typesscanf(\"%d\", &myNum);\n// Output the number the user typedprintf(\"Your number is: %d\", myNum);"
            }
        ],
        "tables": []
    },
    {
        "title": "Multiple Inputs",
        "text": [
            "The scanf() function also allow multiple \ninputs (an integer and a character in the following example):",
            "Example\n\n  // Create an int and a char variableint myNum;char myChar;\n  // Ask the user to type a number AND a characterprintf(\"Type a number AND \n  a character and press enter: \\n\"); // Get and save the number AND \n  character the user typesscanf(\"%d %c\", &myNum, &myChar);// Print \n  the numberprintf(\"Your number is: %d\\n\", myNum);// Print the \n  characterprintf(\"Your character is: %c\\n\", myChar);\n\nRun example »"
        ],
        "examples": [
            {
                "heading": "Example",
                "code": "// Create an int and a char variableint myNum;char myChar;\n  // Ask the user to type a number AND a characterprintf(\"Type a number AND \n  a character and press enter: \\n\"); // Get and save the number AND \n  character the user typesscanf(\"%d %c\", &myNum, &myChar);// Print \n  the numberprintf(\"Your number is: %d\\n\", myNum);// Print the \n  characterprintf(\"Your character is: %c\\n\", myChar);"
            }
        ],
        "tables": []
    },
    {
        "title": "Take String Input",
        "text": [
            "You can also get a string entered by the user:",
            "Example\nOutput the name of a user:\n\n  // Create a stringchar firstName[30];// Ask the user to input some \n  textprintf(\"Enter your first name: \\n\");// Get and save the text\n  scanf(\"%s\", firstName);// Output the textprintf(\"Hello %s\", \n  firstName);\n\nRun example »",
            "Note: When working with strings in scanf(), you must specify the size of \nthe string/array (we used a very high number, 30 in our example, but atleast then we are \ncertain it will store enough characters for the first name), and you don't have \nto use the reference operator (&).",
            "However, the scanf() function has some limitations: it considers space (whitespace, \ntabs, etc) as a terminating character, which means that it can only display a \nsingle word (even if you type many words). For example:",
            "Example\n\n  char fullName[30];printf(\"Type your full name: \\n\");\n  scanf(\"%s\", &fullName);printf(\"Hello %s\", \n  fullName);// Type your full name: John Doe// Hello John",
            "From the example above, you would expect the program to print \"John Doe\", but it only prints \"John\".",
            "That's why, when working with strings, we often use the fgets() function to \nread a line of text. Note that you must include the following \narguments: the name of the string variable, sizeof(string_name), and stdin:",
            "Example\n\n  char fullName[30];printf(\"Type your full name: \\n\");\n  fgets(fullName, sizeof(fullName), stdin);printf(\"Hello %s\", \n  fullName);// Type your full name: John Doe// Hello John Doe\n\nRun example »",
            "Use the scanf() function to get a single word as input, and use fgets() for multiple words.",
            "",
            "❮ Previous\nNext ❯"
        ],
        "examples": [
            {
                "heading": "Example",
                "code": "// Create a stringchar firstName[30];// Ask the user to input some \n  textprintf(\"Enter your first name: \\n\");// Get and save the text\n  scanf(\"%s\", firstName);// Output the textprintf(\"Hello %s\", \n  firstName);"
            },
            {
                "heading": "Example",
                "code": "char fullName[30];printf(\"Type your full name: \\n\");\n  scanf(\"%s\", &fullName);printf(\"Hello %s\", \n  fullName);// Type your full name: John Doe// Hello John"
            },
            {
                "heading": "Example",
                "code": "char fullName[30];printf(\"Type your full name: \\n\");\n  fgets(fullName, sizeof(fullName), stdin);printf(\"Hello %s\", \n  fullName);// Type your full name: John Doe// Hello John Doe"
            }
        ],
        "tables": []
    }
]